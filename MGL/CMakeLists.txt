# Fetch all the source and header files and the then add them automatically
file(GLOB_RECURSE CORE_SOURCES "src/*.cpp")
file(GLOB_RECURSE CORE_HEADERS "src/*.h")

# Add the executable
add_library(MGL STATIC ${CORE_HEADERS} ${CORE_SOURCES})

# Set the C++ Standard to 17 for this target
set_property(TARGET MGL PROPERTY CXX_STANDARD 17)

# ============= #
#   Libraries	#
# ============= #

# SDL
if (ANDROID)
	find_package(SDL2 REQUIRED)
else()
	if(NOT TARGET SDL2)
		add_subdirectory(vendor/SDL ${PROJECT_BINARY_DIR}/SDL)
		set(SDL2_INCLUDE_DIRS vendor/SDL/include)
		set(SDL2_LIBRARIES SDL2-static SDL2main)
	endif()
endif()
target_include_directories(MGL PUBLIC ${SDL2_INCLUDE_DIRS})
target_link_libraries(MGL ${SDL2_LIBRARIES})

# glad
if (NOT TARGET glad)
	add_subdirectory(vendor/glad ${PROJECT_BINARY_DIR}/glad)
	set(GLAD_INCLUDE_DIRS vendor/glad)
	set(GLAD_LIBRARIES glad)
endif()
target_include_directories(MGL PUBLIC ${GLAD_INCLUDE_DIRS})
target_link_libraries(MGL ${GLAD_LIBRARIES})

# stb
if (NOT STB_INCLUDE_DIRS)
	target_include_directories(MGL PUBLIC vendor/stb)
else()
	target_include_directories(MGL PUBLIC ${STB_INCLUDE_DIRS})
endif()

# glm
if(NOT TARGET glm)
	add_subdirectory(vendor/glm ${PROJECT_BINARY_DIR}/glm)
	set(GLM_INCLUDE_DIRS vendor/glm/glm)
	set(GLM_LIBRARIES glm)
endif()
target_include_directories(MGL PUBLIC ${GLM_INCLUDE_DIRS})
target_link_libraries(MGL ${GLM_LIBRARIES})

# ============= #
#    INSTALL  	#
# ============= #
install(TARGETS glm SDL2 SDL2main glad DESTINATION bin)

# ============= #
#     MISC  	#
# ============= #
target_include_directories(MGL PUBLIC ${PROJECT_SOURCE_DIR}/include/)
